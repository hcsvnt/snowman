import{r as c}from"./chunks/index.6ccf1060.js";import{s as i,a as n,b as p}from"./chunks/index.e3b0c442.b7f945b0.js";var s={exports:{}},m={};/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var d=c.exports,u=Symbol.for("react.element"),f=Symbol.for("react.fragment"),v=Object.prototype.hasOwnProperty,j=d.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,w={key:!0,ref:!0,__self:!0,__source:!0};function _(o,e,t){var r,a={},l=null,x=null;t!==void 0&&(l=""+t),e.key!==void 0&&(l=""+e.key),e.ref!==void 0&&(x=e.ref);for(r in e)v.call(e,r)&&!w.hasOwnProperty(r)&&(a[r]=e[r]);if(o&&o.defaultProps)for(r in e=o.defaultProps,e)a[r]===void 0&&(a[r]=e[r]);return{$$typeof:u,type:o,key:l,ref:x,props:a,_owner:j.current}}m.Fragment=f;m.jsx=_;m.jsxs=_;(function(o){o.exports=m})(s);function N(){const o=e=>{const t=[];for(let r=1;r<=e;r++)t.push(r.toString());return t};return s.exports.jsx("div",{className:i.snow,children:o(1e3).map((e,t)=>s.exports.jsx("div",{className:`${i.snowflake} ${i[`snowflake--${t}`]}`,children:"\u2746"},t))})}function y(){return s.exports.jsxs("div",{className:n.snowman,children:[s.exports.jsxs("div",{className:n.snowman__head,children:[s.exports.jsx("div",{className:n.snowman__hat}),s.exports.jsx("div",{className:n["snowman__eye--left"]}),s.exports.jsx("div",{className:n["snowman__eye--right"]}),s.exports.jsx("div",{className:n.snowman__nose})]}),s.exports.jsx("div",{className:n.snowman__belly,children:s.exports.jsxs("div",{className:n.snowman__buttons,children:[s.exports.jsx("div",{className:n.snowman__button}),s.exports.jsx("div",{className:n.snowman__button}),s.exports.jsx("div",{className:n.snowman__button})]})}),s.exports.jsx("div",{className:n.snowman__bottom})]})}function S(){return s.exports.jsxs("main",{className:p.scene,children:[s.exports.jsx(y,{}),s.exports.jsx(N,{})]})}export{S as default};
